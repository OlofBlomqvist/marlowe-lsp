{
    "scopeName": "source.marlowe",
    "patterns": [
      { "include": "#expression" },
      { "include": "#contracts"}      
    ],
    "repository": {
      "identifier": {
        "name": "variable.other.readwrite.marlowe",
        "match": "@?[_[:alpha:]][_[:alnum:]]*"
      },
      "string": {
        "begin": "(\")",
        "beginCaptures": {
          "1": {
            "name": "punctuation.definition.string.begin.marlowe"
          }
        },
        "end": "(\")",
        "endCaptures": {
          "1": {
            "name": "punctuation.definition.string.end.marlowe"
          }
        },
        "name": "string.quoted.double.marlowe"
      },
      "number": {
        "name":"constant.numeric.marlowe",
        "match": "([0-9])+"
      },
      "expression": {
        "patterns": [
          { "include": "#contracts" }, 
          { "include": "#identifier"},          
          { "include": "#paren-expression" },
          { "include": "#string" },
          { "include": "#number" }
        ]
      },
      "contracts": {
        "match": "When|Let|If|Close|Pay|Assert",
        "name": "entity.name.function.contract.marlowe"
      },
      "paren-expression": {
        "begin": "\\(",
        "end": "\\)",
        "beginCaptures": {
          "0": { "name": "punctuation.paren.open.marlowe" }
        },
        "endCaptures": {
          "0": { "name": "punctuation.paren.close.marlowe" }
        },
        "name": "expression.group.marlowe",
        "patterns": [{ "include": "#expression" }]
      }
    }
  }